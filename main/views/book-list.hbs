<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap.min.css"/>
<div class="container">
    <div class="book-list">
        <div>List book and Check out</div>
        <input id="search_value" value=""/>
        <button id="search"class="btn btn-default">search</button>
        <div class="col-xs-12">
            <div class="row">
                <table id="book_table" class="table table-striped table-bordered" width="100%">
                    <thead>
                    <th>Detail</th>
                    <th>ISBN</th>
                    <th>Title</th>
                    <th>Authors</th>
                    <th>Publisher</th>
                    <th>PublishedDate</th>
                    <th>Categories</th>
                    <th>Image</th>
                    <th>More</th>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
                 <button id="save" class="btn btn-default">Save in db</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.13/js/dataTables.bootstrap.min.js"></script>

<script>

    $(document).ready(function() {
        var current,table;

        $("#search").on('click',function () {
            if ($.fn.DataTable.isDataTable("#book_table")) {
                $("#book_table tbody").off();
                $('#book_table').DataTable().clear().destroy();
            }

            var content = $("#search_value").val();
            $.ajax({
                url: '/book/book-list',
                dataType:'json',
                data: {"search":content},
                type: 'POST'
            }).done(function(data){
                current = data;

                table = $('#book_table').DataTable( {
                    "data": data,
                    "responsive": true,
                    "columns": [
                        {
                            "class":'details-control',
                            "orderable":false,
                            "defaultContent": ''
                        },
                        { "data": "ISBN" },
                        { "data": "Title" },
                        { "data": "Authors" },
                        { "data": "Publisher"},
                        { "data": "PublishedDate"},
                        { "data": "Categories"},
                        { "data": "image"},
                        {
                            "orderable":false,
                            "data": "ISBN"
                        }
                    ],
                    "columnDefs": [
                        {
                            "render": function ( data, type, row ) {
                                return "<button ISBN='"+data+"' class='btn btn-danger save-to-database'>Save in DB</button>";
                            },
                            "targets": 8
                        },
                        {
                            "render": function ( data, type, row ) {
                                return '<img src="'+data+'">';
                            },
                            "targets": 7
                        },
                        {
                            "render": function ( data, type, row ) {
                                return data || "No description";
                            },
                            "targets": 2
                        },
                        {
                            "render": function ( data, type, row ) {
                                return data || "No description";
                            },
                            "targets": 3
                        },
                        {
                            "render": function ( data, type, row ) {
                                return data || "Not Category";
                            },
                            "targets": 4
                        },
                        {
                            "render": function ( data, type, row ) {
                                return data || "Not Category";
                            },
                            "targets": 5
                        },
                        {
                            "render": function ( data, type, row ) {
                                return data || "Not Category";
                            },
                            "targets": 6
                        }
                    ],
                    "initComplete":function(settings, json) {
                        $("#book_table tbody").on('click','.save-to-database',function () {
                            var id = $(this).attr('ISBN');
                            var bookSave = JSON.stringify(findBook(current,String(id)));

                            $.ajax({
                                url: '/book/book-single-save',
                                dataType:'json',
                                contentType: "application/json",
                                data: bookSave,
                                type: 'POST'
                            }).done(function(data){
                                console.log(data);
                                swal(data.msg);
                            });
                        });
                        $('#book_table tbody').on('click', 'td.details-control', function () {
                            var tr = $(this).closest('tr');
                            var row = table.row(tr);

                            if ( row.child.isShown() ) {
                                // This row is already open - close it
                                row.child.hide();
                                tr.removeClass('shown');
                            }
                            else {
                                // Open this row
                                var tb = new TableFormat();
                                row.child( tb.book(row.data()) ).show();
                                tr.addClass('shown');
                            }
                        } );
                    }
                });

                function findBook(bookList,id) {
                    for(var i in bookList){
                        if(bookList[i].ISBN == id){
                            return bookList[i];
                        }
                    }
                };


            });
        });

        $("#save").on('click',function () {
            var content = current;
            $.ajax({
                url: '/book/book-list-save',
                dataType:'json',
                contentType: "application/json",
                data: JSON.stringify(content),
                type: 'POST'
            }).done(function(data){
                console.log(data);
                alert(data.msg);
            });
        });

    } );


</script>
